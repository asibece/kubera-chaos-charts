apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Deletes a pod belonging to a deployment/statefulset/daemonset
kind: ChaosExperiment
metadata:
  name: pod-delete
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - "apps"
          - "apps.openshift.io"
          - "argoproj.io"
          - "batch"
          - "litmuschaos.io"
        resources:
          - "deployments"
          - "jobs"
          - "pods"
          - "pods/log"
          - "replicationcontrollers"
          - "deployments"
          - "statefulsets"
          - "daemonsets"
          - "replicasets"
          - "deploymentconfigs"
          - "rollouts"
          - "pods/exec"
          - "events"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
          - "deletecollection"
      - apiGroups:
          - ""
        resources: 
          - "nodes"
        verbs:
          - "get"
          - "list"
    image: "litmuschaos/go-runner:latest"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name pod-delete
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'
    # Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''
    # provide the kill count
    - name: FORCE
      value: 'true'
    - name: CHAOS_INTERVAL
      value: '5'
    - name: PODS_AFFECTED_PERC
      value: ''  
    - name: LIB
      value: 'litmus'
    - name: TARGET_PODS
      value: ''
    - name: SEQUENCE
      value: 'parallel'    
    labels:
      name: pod-delete

---           
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects cpu consumption on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-cpu-hog
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "apps"
          - "apps.openshift.io"
          - "argoproj.io"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "pods/log"
          - "events"
          - "replicationcontrollers"
          - "deployments"
          - "statefulsets"
          - "daemonsets"
          - "replicasets"
          - "deploymentconfigs"
          - "rollouts"
          - "pods/exec"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
          - "deletecollection"
    image: "litmuschaos/go-runner:latest"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name pod-cpu-hog
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'
    
    - name: CHAOS_INTERVAL
      value: '10'
    ## Number of CPU cores to stress
    - name: CPU_CORES
      value: '1'
    ## Percentage of total pods to target
    - name: PODS_AFFECTED_PERC
      value: ''
    ## Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''
    - name: LIB
      value: 'litmus'
    ## It is used in pumba lib only
    - name: LIB_IMAGE
      value: 'litmuschaos/go-runner:latest'
    - name: SOCKET_PATH
      value: '/var/run/docker.sock'
    - name: TARGET_PODS
      value: ''
    - name: SEQUENCE
      value: 'parallel'
    labels:
      name: pod-cpu-hog
---
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects memory consumption on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-memory-hog
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "apps"
          - "apps.openshift.io"
          - "argoproj.io"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "pods/log"
          - "replicationcontrollers"
          - "deployments"
          - "statefulsets"
          - "daemonsets"
          - "replicasets"
          - "deploymentconfigs"
          - "rollouts"
          - "pods/exec"
          - "events"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
          - "deletecollection"
    image: "litmuschaos/go-runner:latest"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name pod-memory-hog
    command:
    - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: '30'
      - name: CHAOS_INTERVAL
        value: '10'
      ## enter the amount of memory in megabytes to be consumed by the application pod
      - name: MEMORY_CONSUMPTION
        value: '500'
      ## percentage of total pods to target
      - name: PODS_AFFECTED_PERC
        value: ''
      ## Period to wait before and after injection of chaos in sec
      - name: RAMP_TIME
        value: ''     
      ## env var that describes the library used to execute the chaos
      ## default: litmus. Supported values: litmus, powerfulseal, chaoskube
      - name: LIB
        value: 'litmus'
      - name: LIB_IMAGE
        value: 'litmuschaos/go-runner:latest'
      - name: SOCKET_PATH
        value: '/var/run/docker.sock'
      ## it defines the sequence of chaos execution for multiple target pods
      ## supported values: serial, parallel
      - name: SEQUENCE
        value: 'parallel'
      - name: TARGET_PODS
        value: ''
    labels:
      name: pod-memory-hog
---
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects network packet loss on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-network-loss
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "apps"
          - "apps.openshift.io"
          - "argoproj.io"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "pods/log"
          - "replicationcontrollers"
          - "deployments"
          - "statefulsets"
          - "daemonsets"
          - "replicasets"
          - "deploymentconfigs"
          - "rollouts"
          - "pods/exec"
          - "events"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
          - "deletecollection"
    image: "litmuschaos/go-runner:latest"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name pod-network-loss
    command:
    - /bin/bash
    
    env:
    - name: TARGET_CONTAINER
      value: ''
    - name: LIB_IMAGE
      value: 'litmuschaos/go-runner:latest' 
    - name: NETWORK_INTERFACE
      value: 'eth0'
    - name: TC_IMAGE
      value: 'gaiadocker/iproute2'
    - name: NETWORK_PACKET_LOSS_PERCENTAGE
      value: '100' #in PERCENTAGE
    - name: TOTAL_CHAOS_DURATION
      value: '30' # in seconds
    - name: RAMP_TIME
      value: ''
    - name: LIB
      value: 'litmus'
    - name: PODS_AFFECTED_PERC
      value: ''
    - name: TARGET_PODS
      value: ''
    - name: CONTAINER_RUNTIME
      value: 'docker'
    - name: DESTINATION_IPS
      value: ''
    - name: DESTINATION_HOSTS
      value: ''
    - name: SOCKET_PATH
      value: '/var/run/docker.sock'
    - name: SEQUENCE
      value: 'parallel'
    labels:
      name: pod-network-loss
